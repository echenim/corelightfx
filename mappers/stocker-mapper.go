package mappers

import (
	"github.com/echenim/corelightfx/models"
)

func ToStock(s models.StockDTO) models.Stock {
	return models.Stock{
		ID:                     s.ID,
		Symbol:                 s.Symbol,
		CompanyName:            s.CompanyName,
		PrimaryExchange:        s.PrimaryExchange,
		CalculationPrice:       s.CalculationPrice,
		Open:                   s.Open,
		OpenTime:               s.OpenTime,
		OpenSource:             s.OpenSource,
		Close:                  s.Close,
		CloseTime:              s.CloseTime,
		CloseSource:            s.CloseSource,
		High:                   s.High,
		HighTime:               s.HighTime,
		HighSource:             s.HighSource,
		Low:                    s.Low,
		LowTime:                s.LowTime,
		LowSource:              s.LowSource,
		LatestPrice:            s.LatestPrice,
		LatestSource:           s.LatestSource,
		LatestTime:             s.LatestTime,
		LatestUpdate:           s.LatestUpdate,
		LatestVolume:           s.LatestVolume,
		IexRealtimePrice:       s.IexRealtimePrice,
		IexRealtimeSize:        s.IexRealtimeSize,
		IexLastUpdated:         s.IexLastUpdated,
		DelayedPrice:           s.DelayedPrice,
		DelayedPriceTime:       s.DelayedPriceTime,
		OddLotDelayedPrice:     s.OddLotDelayedPrice,
		OddLotDelayedPriceTime: s.OddLotDelayedPriceTime,
		ExtendedPrice:          s.ExtendedPrice,
		ExtendedChange:         s.ExtendedChange,
		ExtendedChangePercent:  s.ExtendedChangePercent,
		ExtendedPriceTime:      s.ExtendedPriceTime,
		PreviousClose:          s.PreviousClose,
		PreviousVolume:         s.PreviousVolume,
		Change:                 s.Change,
		ChangePercent:          s.ChangePercent,
		Volume:                 s.Volume,
		IexMarketPercent:       s.IexMarketPercent,
		IexVolume:              s.IexVolume,
		AvgTotalVolume:         s.AvgTotalVolume,
		IexBidPrice:            s.IexBidPrice,
		IexBidSize:             s.IexBidSize,
		IexAskPrice:            s.IexAskPrice,
		IexAskSize:             s.IexAskSize,
		IexOpen:                s.IexOpen,
		IexOpenTime:            s.IexOpenTime,
		IexClose:               s.IexClose,
		IexCloseTime:           s.IexCloseTime,
		MarketCap:              s.MarketCap,
		PeRatio:                s.PeRatio,
		Week52High:             s.Week52High,
		Week52Low:              s.Week52Low,
		YtdChange:              s.YtdChange,
		LastTradeTime:          s.LastTradeTime,
		IsUSMarketOpen:         s.IsUSMarketOpen,
		Stamp:                  s.Stamp,
	}
}

func ToStockDTO(s models.Stock) models.StockDTO {
	return models.StockDTO{
		ID:                     s.ID,
		Symbol:                 s.Symbol,
		CompanyName:            s.CompanyName,
		PrimaryExchange:        s.PrimaryExchange,
		CalculationPrice:       s.CalculationPrice,
		Open:                   s.Open,
		OpenTime:               s.OpenTime,
		OpenSource:             s.OpenSource,
		Close:                  s.Close,
		CloseTime:              s.CloseTime,
		CloseSource:            s.CloseSource,
		High:                   s.High,
		HighTime:               s.HighTime,
		HighSource:             s.HighSource,
		Low:                    s.Low,
		LowTime:                s.LowTime,
		LowSource:              s.LowSource,
		LatestPrice:            s.LatestPrice,
		LatestSource:           s.LatestSource,
		LatestTime:             s.LatestTime,
		LatestUpdate:           s.LatestUpdate,
		LatestVolume:           s.LatestVolume,
		IexRealtimePrice:       s.IexRealtimePrice,
		IexRealtimeSize:        s.IexRealtimeSize,
		IexLastUpdated:         s.IexLastUpdated,
		DelayedPrice:           s.DelayedPrice,
		DelayedPriceTime:       s.DelayedPriceTime,
		OddLotDelayedPrice:     s.OddLotDelayedPrice,
		OddLotDelayedPriceTime: s.OddLotDelayedPriceTime,
		ExtendedPrice:          s.ExtendedPrice,
		ExtendedChange:         s.ExtendedChange,
		ExtendedChangePercent:  s.ExtendedChangePercent,
		ExtendedPriceTime:      s.ExtendedPriceTime,
		PreviousClose:          s.PreviousClose,
		PreviousVolume:         s.PreviousVolume,
		Change:                 s.Change,
		ChangePercent:          s.ChangePercent,
		Volume:                 s.Volume,
		IexMarketPercent:       s.IexMarketPercent,
		IexVolume:              s.IexVolume,
		AvgTotalVolume:         s.AvgTotalVolume,
		IexBidPrice:            s.IexBidPrice,
		IexBidSize:             s.IexBidSize,
		IexAskPrice:            s.IexAskPrice,
		IexAskSize:             s.IexAskSize,
		IexOpen:                s.IexOpen,
		IexOpenTime:            s.IexOpenTime,
		IexClose:               s.IexClose,
		IexCloseTime:           s.IexCloseTime,
		MarketCap:              s.MarketCap,
		PeRatio:                s.PeRatio,
		Week52High:             s.Week52High,
		Week52Low:              s.Week52Low,
		YtdChange:              s.YtdChange,
		LastTradeTime:          s.LastTradeTime,
		IsUSMarketOpen:         s.IsUSMarketOpen,
		Stamp:                  s.Stamp,
	}
}

func ToStockDTOs(s []models.Stock) []models.StockDTO {
	stockdtos := make([]models.StockDTO, len(s))
	for i, item := range s {
		stockdtos[i] = ToStockDTO(item)
	}
	return stockdtos
}
